{"version":3,"file":"static/js/206.44a70287.chunk.js","mappings":"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","sources":["components/QuotePage.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Container,\n  Form,\n  Button,\n  Row,\n  Col,\n  Card,\n  Alert,\n} from \"react-bootstrap\";\nimport \"./QuotePage.css\";\nimport cerco150 from '../assets/cerco_stock.webp';\nimport cerco190 from '../assets/cerco-190.webp';\nimport cerco220 from '../assets/Cerco-home.webp';\n\nconst QuotePage = () => {\n  const [formData, setFormData] = useState({\n    name: \"\",\n    rut: \"\",\n    phone: \"\",\n    address: \"\",\n    email: \"\",\n    fenceHeight: \"1.50m\",\n    fenceType: \"Cerco Vibrado Estándar\", // Nuevo campo\n    linearMeters: \"\",\n    message: \"\",\n  });\n  const [message, setMessage] = useState(null);\n  const [error, setError] = useState(null);\n  const [validated, setValidated] = useState(false); // Estado para validación de Bootstrap\n\n  const formatRut = (value) => {\n    // Limpiar el RUT de caracteres no numéricos y puntos\n    let cleaned = value.replace(/[^0-9kK]/g, \"\");\n\n    // Convertir a mayúscula la K si existe\n    cleaned = cleaned.toUpperCase();\n\n    // Aplicar formato: XX.XXX.XXX-X\n    let formatted = \"\";\n    if (cleaned.length > 1) {\n      formatted = cleaned.slice(-1);\n      cleaned = cleaned.slice(0, -1);\n    }\n\n    while (cleaned.length > 3) {\n      formatted = \".\" + cleaned.slice(-3) + formatted;\n      cleaned = cleaned.slice(0, -3);\n    }\n\n    if (cleaned.length > 0) {\n      formatted = cleaned + formatted;\n    }\n\n    if (formatted.length > 0 && value.includes(\"-\")) {\n      formatted = formatted.replace(/\\.(?=[0-9]{3}-)/g, \"\"); // Evitar doble punto antes del guion\n      formatted = formatted.replace(/-(?=[0-9]{3})/g, \"\"); // Evitar doble guion\n    }\n\n    if (formatted.length > 0 && !formatted.includes(\"-\")) {\n      formatted = formatted.slice(0, -1) + \"-\" + formatted.slice(-1);\n    }\n\n    return formatted;\n  };\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    let newValue = value;\n\n    if (name === \"rut\") {\n      newValue = formatRut(value);\n    }\n\n    setFormData((prevState) => {\n      const newState = { ...prevState, [name]: newValue };\n      // Actualizar fenceType basado en fenceHeight\n      if (name === \"fenceHeight\") {\n        newState.fenceType =\n          value === \"Otra\"\n            ? \"Cerco Vibrado Personalizado\"\n            : `Cerco Vibrado ${value}`;\n      }\n      return newState;\n    });\n  };\n\n  const handleSubmit = async (event) => {\n    const form = event.currentTarget;\n    event.preventDefault();\n    event.stopPropagation();\n\n    if (form.checkValidity() === false) {\n      setValidated(true);\n      setError(\"Por favor, completa todos los campos obligatorios.\");\n      return;\n    }\n\n    setMessage(null);\n    setError(null);\n    setValidated(false); // Reset validation state on successful attempt\n\n    try {\n      const response = await fetch(\"http://localhost:5000/api/quotes\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(formData),\n      });\n\n      const data = await response.json();\n\n      if (!response.ok) {\n        throw new Error(data.message || \"Error al enviar la cotización\");\n      }\n\n      setMessage(\n        \"¡Cotización enviada exitosamente! Nos pondremos en contacto contigo pronto.\",\n      );\n      setFormData({\n        name: \"\",\n        rut: \"\",\n        phone: \"\",\n        address: \"\",\n        email: \"\",\n        fenceHeight: \"1.50m\",\n        fenceType: \"Cerco Vibrado Estándar\", // Resetear también\n        linearMeters: \"\",\n        message: \"\",\n      });\n      setValidated(false); // Reset validation state on successful submission\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  const getImageForHeight = (height) => {\n    switch (height) {\n      case '1.50m':\n        return cerco150;\n      case '1.90m':\n        return cerco190;\n      case '2.20m':\n        return cerco220;\n      default:\n        return cerco150; // Default image\n    }\n  };\n\n  return (\n    <section className=\"quote-page-section\">\n      <Container>\n        <Row className=\"justify-content-center\">\n          <Col md={8}>\n            <Card className=\"quote-card\">\n              <Card.Body>\n                <h2 className=\"text-center mb-4\">Solicita tu Cotización</h2>\n                <p className=\"text-center text-muted mb-4\">\n                  Completa el formulario y te enviaremos una cotización detallada a la brevedad.\n                </p>\n                {message && <Alert variant=\"success\">{message}</Alert>}\n                {error && <Alert variant=\"danger\">{error}</Alert>}\n                <Form noValidate validated={validated} onSubmit={handleSubmit}>\n                  <Row>\n                    <Col md={6}>\n                      <Form.Group className=\"mb-3\" controlId=\"formName\">\n                        <Form.Label>Nombre Completo</Form.Label>\n                        <Form.Control type=\"text\" name=\"name\" value={formData.name} onChange={handleChange} required />\n                        <Form.Control.Feedback type=\"invalid\">Por favor, ingresa tu nombre completo.</Form.Control.Feedback>\n                      </Form.Group>\n                    </Col>\n                    <Col md={6}>\n                      <Form.Group className=\"mb-3\" controlId=\"formRut\">\n                        <Form.Label>RUT</Form.Label>\n                        <Form.Control type=\"text\" name=\"rut\" value={formData.rut} onChange={handleChange} required pattern=\"^[0-9]{1,2}\\.[0-9]{3}\\.[0-9]{3}-[0-9kK]{1}$\" />\n                        <Form.Control.Feedback type=\"invalid\">Por favor, ingresa un RUT válido (ej. 12.345.678-9).</Form.Control.Feedback>\n                      </Form.Group>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col md={6}>\n                      <Form.Group className=\"mb-3\" controlId=\"formPhone\">\n                        <Form.Label>Número de Teléfono</Form.Label>\n                        <Form.Control type=\"tel\" name=\"phone\" value={formData.phone} onChange={handleChange} required />\n                        <Form.Control.Feedback type=\"invalid\">Por favor, ingresa tu número de teléfono.</Form.Control.Feedback>\n                      </Form.Group>\n                    </Col>\n                    <Col md={6}>\n                      <Form.Group className=\"mb-3\" controlId=\"formEmail\">\n                        <Form.Label>Correo Electrónico</Form.Label>\n                        <Form.Control type=\"email\" name=\"email\" value={formData.email} onChange={handleChange} required />\n                        <Form.Control.Feedback type=\"invalid\">Por favor, ingresa un correo electrónico válido.</Form.Control.Feedback>\n                      </Form.Group>\n                    </Col>\n                  </Row>\n\n                  <Form.Group className=\"mb-3\" controlId=\"formAddress\">\n                    <Form.Label>Dirección / Comuna</Form.Label>\n                    <Form.Control type=\"text\" name=\"address\" value={formData.address} onChange={handleChange} required />\n                    <Form.Control.Feedback type=\"invalid\">Por favor, ingresa tu dirección o comuna.</Form.Control.Feedback>\n                  </Form.Group>\n\n                  <Row>\n                    <Col md={6}>\n                      <Form.Group className=\"mb-3\" controlId=\"formFenceHeight\">\n                        <Form.Label>Altura del Cerco</Form.Label>\n                        <Form.Select name=\"fenceHeight\" value={formData.fenceHeight} onChange={handleChange} required>\n                          <option value=\"\">Selecciona una altura</option>\n                          <option>1.50m</option>\n                          <option>1.90m</option>\n                          <option>2.20m</option>\n                          <option>Otra</option>\n                        </Form.Select>\n                        <Form.Control.Feedback type=\"invalid\">Por favor, selecciona la altura del cerco.</Form.Control.Feedback>\n                      </Form.Group>\n                    </Col>\n                    <Col md={6}>\n                      <Form.Group className=\"mb-3\" controlId=\"formLinearMeters\">\n                        <Form.Label>Metros Lineales (aprox.)</Form.Label>\n                        <Form.Control type=\"number\" name=\"linearMeters\" value={formData.linearMeters} onChange={handleChange} required min=\"1\" />\n                        <Form.Control.Feedback type=\"invalid\">Por favor, ingresa los metros lineales.</Form.Control.Feedback>\n                      </Form.Group>\n                    </Col>\n                  </Row>\n\n                  <Form.Group className=\"mb-3\" controlId=\"formMessage\">\n                    <Form.Label>Mensaje Adicional</Form.Label>\n                    <Form.Control as=\"textarea\" name=\"message\" rows={4} value={formData.message} onChange={handleChange} placeholder=\"Indícanos cualquier detalle importante para tu proyecto.\"\n                    />\n                  </Form.Group>\n\n                  <div className=\"d-grid\">\n                    <Button variant=\"primary\" type=\"submit\" size=\"lg\">\n                      Enviar Cotización\n                    </Button>\n                  </div>\n                </Form>\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n        <Row className=\"justify-content-center mt-5\">\n          <Col md={8}>\n            <img src={getImageForHeight(formData.fenceHeight)} alt=\"Cerco de referencia\" className=\"img-fluid rounded shadow-lg\" />\n          </Col>\n        </Row>\n      </Container>\n    </section>\n  );\n\n};\n\nexport default QuotePage;\n\n"],"names":["QuotePage","formData","setFormData","useState","name","rut","phone","address","email","fenceHeight","fenceType","linearMeters","message","setMessage","error","setError","validated","setValidated","handleChange","e","value","target","newValue","cleaned","replace","toUpperCase","formatted","length","slice","includes","formatRut","prevState","newState","_objectSpread","concat","_jsx","className","children","_jsxs","Container","Row","Col","md","Card","Body","Alert","variant","Form","noValidate","onSubmit","async","form","event","currentTarget","preventDefault","stopPropagation","checkValidity","response","fetch","method","headers","body","JSON","stringify","data","json","ok","Error","Group","controlId","Label","Control","type","onChange","required","Feedback","pattern","Select","min","as","rows","placeholder","Button","size","src","height","cerco150","cerco190","cerco220","getImageForHeight","alt"],"sourceRoot":""}